{"version":3,"file":"redux-persist.min.js","sources":["../node_modules/lodash-es/_getRawTag.js","../node_modules/lodash-es/_objectToString.js","../node_modules/lodash-es/_baseGetTag.js","../node_modules/lodash-es/isObjectLike.js","../node_modules/lodash-es/isPlainObject.js","../src/utils/isStatePlainEnough.js","../src/autoRehydrate.js","../src/defaults/asyncLocalStorage.js","../src/purgeStoredState.js","../src/createPersistor.js","../src/createTransform.js","../src/getStoredState.js","../src/persistStore.js","../src/constants.js","../node_modules/lodash-es/_freeGlobal.js","../node_modules/lodash-es/_root.js","../node_modules/lodash-es/_Symbol.js","../node_modules/lodash-es/_getPrototype.js","../node_modules/lodash-es/_overArg.js","../src/utils/setImmediate.js","../node_modules/json-stringify-safe/stringify.js","../src/index.js"],"sourcesContent":["import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","import isPlainObject from 'lodash/isPlainObject'\n\nexport default function isStatePlainEnough (a) {\n  // isPlainObject + duck type not immutable\n  if (!a) return false\n  if (typeof a !== 'object') return false\n  if (typeof a.asMutable === 'function') return false\n  if (!isPlainObject(a)) return false\n  return true\n}\n","import { REHYDRATE } from './constants'\nimport isStatePlainEnough from './utils/isStatePlainEnough'\n\nexport default function autoRehydrate (config = {}) {\n  const stateReconciler = config.stateReconciler || defaultStateReconciler\n\n  return (next) => (reducer, initialState, enhancer) => {\n    let store = next(liftReducer(reducer), initialState, enhancer)\n    return {\n      ...store,\n      replaceReducer: (reducer) => {\n        return store.replaceReducer(liftReducer(reducer))\n      }\n    }\n  }\n\n  function liftReducer (reducer) {\n    let rehydrated = false\n    let preRehydrateActions = []\n    return (state, action) => {\n      if (action.type !== REHYDRATE) {\n        if (config.log && !rehydrated) preRehydrateActions.push(action) // store pre-rehydrate actions for debugging\n        return reducer(state, action)\n      } else {\n        if (config.log && !rehydrated) logPreRehydrate(preRehydrateActions)\n        rehydrated = true\n\n        let inboundState = action.payload\n        let reducedState = reducer(state, action)\n\n        return stateReconciler(state, inboundState, reducedState, config.log)\n      }\n    }\n  }\n}\n\nfunction logPreRehydrate (preRehydrateActions) {\n  const concernedActions = preRehydrateActions.slice(1)\n  if (concernedActions.length > 0) {\n    console.log(`\n      redux-persist/autoRehydrate: %d actions were fired before rehydration completed. This can be a symptom of a race\n      condition where the rehydrate action may overwrite the previously affected state. Consider running these actions\n      after rehydration:\n    `, concernedActions.length, concernedActions)\n  }\n}\n\nfunction defaultStateReconciler (state, inboundState, reducedState, log) {\n  let newState = {...reducedState}\n\n  Object.keys(inboundState).forEach((key) => {\n    // if initialState does not have key, skip auto rehydration\n    if (!state.hasOwnProperty(key)) return\n\n    // if initial state is an object but inbound state is null/undefined, skip\n    if (typeof state[key] === 'object' && !inboundState[key]) {\n      if (log) console.log('redux-persist/autoRehydrate: sub state for key `%s` is falsy but initial state is an object, skipping autoRehydrate.', key)\n      return\n    }\n\n    // if reducer modifies substate, skip auto rehydration\n    if (state[key] !== reducedState[key]) {\n      if (log) console.log('redux-persist/autoRehydrate: sub state for key `%s` modified, skipping autoRehydrate.', key)\n      newState[key] = reducedState[key]\n      return\n    }\n\n    // otherwise take the inboundState\n    if (isStatePlainEnough(inboundState[key]) && isStatePlainEnough(state[key])) newState[key] = {...state[key], ...inboundState[key]} // shallow merge\n    else newState[key] = inboundState[key] // hard set\n\n    if (log) console.log('redux-persist/autoRehydrate: key `%s`, rehydrated to ', key, newState[key])\n  })\n  return newState\n}\n","import setImmediate from '../utils/setImmediate'\n\nlet noStorage = () => { /* noop */ return null }\nif (process.env.NODE_ENV !== 'production') {\n  noStorage = () => {\n    console.error('redux-persist asyncLocalStorage requires a global localStorage object. Either use a different storage backend or if this is a universal redux application you probably should conditionally persist like so: https://gist.github.com/rt2zz/ac9eb396793f95ff3c3b')\n    return null\n  }\n}\n\nfunction _hasStorage (storageType) {\n  if (typeof window !== 'object' || !(storageType in window)) {\n    return false\n  }\n\n  try {\n    let storage = window[storageType]\n    const testKey = `redux-persist ${storageType} test`\n    storage.setItem(testKey, 'test')\n    storage.getItem(testKey)\n    storage.removeItem(testKey)\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') console.warn(`redux-persist ${storageType} test failed, persistence will be disabled.`)\n    return false\n  }\n  return true\n}\n\nfunction hasLocalStorage () {\n  return _hasStorage('localStorage')\n}\n\nfunction hasSessionStorage () {\n  return _hasStorage('sessionStorage')\n}\n\nfunction getStorage (type) {\n  if (type === 'local') {\n    return hasLocalStorage()\n      ? window.localStorage\n      : { getItem: noStorage, setItem: noStorage, removeItem: noStorage, getAllKeys: noStorage }\n  }\n  if (type === 'session') {\n    return hasSessionStorage()\n      ? window.sessionStorage\n      : { getItem: noStorage, setItem: noStorage, removeItem: noStorage, getAllKeys: noStorage }\n  }\n}\n\nexport default function (type, config) {\n  let storage = getStorage(type)\n  return {\n    getAllKeys: function (cb) {\n      return new Promise((resolve, reject) => {\n        try {\n          var keys = []\n          for (var i = 0; i < storage.length; i++) {\n            keys.push(storage.key(i))\n          }\n          setImmediate(() => {\n            cb && cb(null, keys)\n            resolve(keys)\n          })\n        } catch (e) {\n          cb && cb(e)\n          reject(e)\n        }\n      })\n    },\n    getItem (key, cb) {\n      return new Promise((resolve, reject) => {\n        try {\n          var s = storage.getItem(key)\n          setImmediate(() => {\n            cb && cb(null, s)\n            resolve(s)\n          })\n        } catch (e) {\n          cb && cb(e)\n          reject(e)\n        }\n      })\n    },\n    setItem (key, string, cb) {\n      return new Promise((resolve, reject) => {\n        try {\n          storage.setItem(key, string)\n          setImmediate(() => {\n            cb && cb(null)\n            resolve()\n          })\n        } catch (e) {\n          cb && cb(e)\n          reject(e)\n        }\n      })\n    },\n    removeItem (key, cb) {\n      return new Promise((resolve, reject) => {\n        try {\n          storage.removeItem(key)\n          setImmediate(() => {\n            cb && cb(null)\n            resolve()\n          })\n        } catch (e) {\n          cb && cb(e)\n          reject(e)\n        }\n      })\n    }\n  }\n}\n","import { KEY_PREFIX } from './constants'\n\nexport default function purgeStoredState (config, keys) {\n  const storage = config.storage\n  const keyPrefix = config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX\n\n  // basic validation\n  if (Array.isArray(config)) throw new Error('redux-persist: purgeStoredState requires config as a first argument (found array). An array of keys is the optional second argument.')\n  if (!storage) throw new Error('redux-persist: config.storage required in purgeStoredState')\n\n  if (typeof keys === 'undefined') { // if keys is not defined, purge all keys\n    return new Promise((resolve, reject) => {\n      storage.getAllKeys((err, allKeys) => {\n        if (err) {\n          if (process.env.NODE_ENV !== 'production') console.warn('redux-persist: error during purgeStoredState in storage.getAllKeys')\n          reject(err)\n        } else {\n          resolve(purgeStoredState(config, allKeys.filter((key) => key.indexOf(keyPrefix) === 0).map((key) => key.slice(keyPrefix.length))))\n        }\n      })\n    })\n  } else { // otherwise purge specified keys\n    return Promise.all(keys.map((key) => {\n      return storage.removeItem(`${keyPrefix}${key}`, warnIfRemoveError(key))\n    }))\n  }\n}\n\nfunction warnIfRemoveError (key) {\n  return function removeError (err) {\n    if (err && process.env.NODE_ENV !== 'production') { console.warn('Error storing data for key:', key, err) }\n  }\n}\n","import { KEY_PREFIX, REHYDRATE } from './constants'\nimport createAsyncLocalStorage from './defaults/asyncLocalStorage'\nimport purgeStoredState from './purgeStoredState'\nimport stringify from 'json-stringify-safe'\n\nexport default function createPersistor (store, config) {\n  // defaults\n  const serializer = config.serialize === false ? (data) => data : defaultSerializer\n  const deserializer = config.serialize === false ? (data) => data : defaultDeserializer\n  const blacklist = config.blacklist || []\n  const whitelist = config.whitelist || false\n  const transforms = config.transforms || []\n  const debounce = config.debounce || false\n  const keyPrefix = config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX\n\n  // pluggable state shape (e.g. immutablejs)\n  const stateInit = config._stateInit || {}\n  const stateIterator = config._stateIterator || defaultStateIterator\n  const stateGetter = config._stateGetter || defaultStateGetter\n  const stateSetter = config._stateSetter || defaultStateSetter\n\n  // storage with keys -> getAllKeys for localForage support\n  let storage = config.storage || createAsyncLocalStorage('local')\n  if (storage.keys && !storage.getAllKeys) {\n    storage.getAllKeys = storage.keys\n  }\n\n  // initialize stateful values\n  let lastState = stateInit\n  let paused = false\n  let storesToProcess = []\n  let timeIterator = null\n\n  store.subscribe(() => {\n    if (paused) return\n\n    let state = store.getState()\n\n    stateIterator(state, (subState, key) => {\n      if (!passWhitelistBlacklist(key)) return\n      if (stateGetter(lastState, key) === stateGetter(state, key)) return\n      if (storesToProcess.indexOf(key) !== -1) return\n      storesToProcess.push(key)\n    })\n\n    const len = storesToProcess.length\n\n    // time iterator (read: debounce)\n    if (timeIterator === null) {\n      timeIterator = setInterval(() => {\n        if ((paused && len === storesToProcess.length) || storesToProcess.length === 0) {\n          clearInterval(timeIterator)\n          timeIterator = null\n          return\n        }\n\n        let key = storesToProcess.shift()\n        let storageKey = createStorageKey(key)\n        let endState = transforms.reduce((subState, transformer) => transformer.in(subState, key), stateGetter(store.getState(), key))\n        if (typeof endState !== 'undefined') storage.setItem(storageKey, serializer(endState), warnIfSetError(key))\n      }, debounce)\n    }\n\n    lastState = state\n  })\n\n  function passWhitelistBlacklist (key) {\n    if (whitelist && whitelist.indexOf(key) === -1) return false\n    if (blacklist.indexOf(key) !== -1) return false\n    return true\n  }\n\n  function adhocRehydrate (incoming, options = {}) {\n    let state = {}\n    if (options.serial) {\n      stateIterator(incoming, (subState, key) => {\n        try {\n          let data = deserializer(subState)\n          let value = transforms.reduceRight((interState, transformer) => {\n            return transformer.out(interState, key)\n          }, data)\n          state = stateSetter(state, key, value)\n        } catch (err) {\n          if (process.env.NODE_ENV !== 'production') console.warn(`Error rehydrating data for key \"${key}\"`, subState, err)\n        }\n      })\n    } else state = incoming\n\n    store.dispatch(rehydrateAction(state))\n    return state\n  }\n\n  function createStorageKey (key) {\n    return `${keyPrefix}${key}`\n  }\n\n  // return `persistor`\n  return {\n    rehydrate: adhocRehydrate,\n    pause: () => { paused = true },\n    resume: () => { paused = false },\n    purge: (keys) => purgeStoredState({storage, keyPrefix}, keys)\n  }\n}\n\nfunction warnIfSetError (key) {\n  return function setError (err) {\n    if (err && process.env.NODE_ENV !== 'production') { console.warn('Error storing data for key:', key, err) }\n  }\n}\n\nfunction defaultSerializer (data) {\n  return stringify(data, null, null, (k, v) => {\n    if (process.env.NODE_ENV !== 'production') return null\n    throw new Error(`\n      redux-persist: cannot process cyclical state.\n      Consider changing your state structure to have no cycles.\n      Alternatively blacklist the corresponding reducer key.\n      Cycle encounted at key \"${k}\" with value \"${v}\".\n    `)\n  })\n}\n\nfunction defaultDeserializer (serial) {\n  return JSON.parse(serial)\n}\n\nfunction rehydrateAction (data) {\n  return {\n    type: REHYDRATE,\n    payload: data\n  }\n}\n\nfunction defaultStateIterator (collection, callback) {\n  return Object.keys(collection).forEach((key) => callback(collection[key], key))\n}\n\nfunction defaultStateGetter (state, key) {\n  return state[key]\n}\n\nfunction defaultStateSetter (state, key, value) {\n  state[key] = value\n  return state\n}\n","function createTransform (inbound, outbound, config = {}) {\n  let whitelist = config.whitelist || null\n  let blacklist = config.blacklist || null\n\n  function whitelistBlacklistCheck (key) {\n    if (whitelist && whitelist.indexOf(key) === -1) return true\n    if (blacklist && blacklist.indexOf(key) !== -1) return true\n    return false\n  }\n\n  return {\n    in: (state, key) => !whitelistBlacklistCheck(key) && inbound ? inbound(state, key) : state,\n    out: (state, key) => !whitelistBlacklistCheck(key) && outbound ? outbound(state, key) : state\n  }\n}\n\nexport default createTransform\n","import { KEY_PREFIX } from './constants'\nimport createAsyncLocalStorage from './defaults/asyncLocalStorage'\n\nexport default function getStoredState (config, onComplete) {\n  let storage = config.storage || createAsyncLocalStorage('local')\n  const deserializer = config.serialize === false ? (data) => data : defaultDeserializer\n  const blacklist = config.blacklist || []\n  const whitelist = config.whitelist || false\n  const transforms = config.transforms || []\n  const keyPrefix = config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX\n\n  // fallback getAllKeys to `keys` if present (LocalForage compatability)\n  if (storage.keys && !storage.getAllKeys) storage = {...storage, getAllKeys: storage.keys}\n\n  let restoredState = {}\n  let completionCount = 0\n\n  storage.getAllKeys((err, allKeys) => {\n    if (err) {\n      if (process.env.NODE_ENV !== 'production') console.warn('redux-persist/getStoredState: Error in storage.getAllKeys')\n      complete(err)\n    }\n\n    let persistKeys = allKeys.filter((key) => key.indexOf(keyPrefix) === 0).map((key) => key.slice(keyPrefix.length))\n    let keysToRestore = persistKeys.filter(passWhitelistBlacklist)\n\n    let restoreCount = keysToRestore.length\n    if (restoreCount === 0) complete(null, restoredState)\n    keysToRestore.forEach((key) => {\n      storage.getItem(createStorageKey(key), (err, serialized) => {\n        if (err && process.env.NODE_ENV !== 'production') console.warn('redux-persist/getStoredState: Error restoring data for key:', key, err)\n        else restoredState[key] = rehydrate(key, serialized)\n        completionCount += 1\n        if (completionCount === restoreCount) complete(null, restoredState)\n      })\n    })\n  })\n\n  function rehydrate (key, serialized) {\n    let state = null\n\n    try {\n      let data = deserializer(serialized)\n      state = transforms.reduceRight((subState, transformer) => {\n        return transformer.out(subState, key)\n      }, data)\n    } catch (err) {\n      if (process.env.NODE_ENV !== 'production') console.warn('redux-persist/getStoredState: Error restoring data for key:', key, err)\n    }\n\n    return state\n  }\n\n  function complete (err, restoredState) {\n    onComplete(err, restoredState)\n  }\n\n  function passWhitelistBlacklist (key) {\n    if (whitelist && whitelist.indexOf(key) === -1) return false\n    if (blacklist.indexOf(key) !== -1) return false\n    return true\n  }\n\n  function createStorageKey (key) {\n    return `${keyPrefix}${key}`\n  }\n\n  if (typeof onComplete !== 'function' && !!Promise) {\n    return new Promise((resolve, reject) => {\n      onComplete = (err, restoredState) => {\n        if (err) reject(err)\n        else resolve(restoredState)\n      }\n    })\n  }\n}\n\nfunction defaultDeserializer (serial) {\n  return JSON.parse(serial)\n}\n","import { REHYDRATE } from './constants'\nimport getStoredState from './getStoredState'\nimport createPersistor from './createPersistor'\nimport setImmediate from './utils/setImmediate'\n\nexport default function persistStore (store, config = {}, onComplete) {\n  // defaults\n  // @TODO remove shouldRestore\n  const shouldRestore = !config.skipRestore\n  if (process.env.NODE_ENV !== 'production' && config.skipRestore) console.warn('redux-persist: config.skipRestore has been deprecated. If you want to skip restoration use `createPersistor` instead')\n\n  let purgeKeys = null\n\n  // create and pause persistor\n  const persistor = createPersistor(store, config)\n  persistor.pause()\n\n  // restore\n  if (shouldRestore) {\n    setImmediate(() => {\n      getStoredState(config, (err, restoredState) => {\n        if (err) {\n          complete(err)\n          return\n        }\n        // do not persist state for purgeKeys\n        if (purgeKeys) {\n          if (purgeKeys === '*') restoredState = {}\n          else purgeKeys.forEach((key) => delete restoredState[key])\n        }\n        try {\n          store.dispatch(rehydrateAction(restoredState, err))\n        } finally {\n          complete(err, restoredState)\n        }\n      })\n    })\n  } else setImmediate(complete)\n\n  function complete (err, restoredState) {\n    persistor.resume()\n    onComplete && onComplete(err, restoredState)\n  }\n\n  return {\n    ...persistor,\n    purge: (keys) => {\n      purgeKeys = keys || '*'\n      return persistor.purge(keys)\n    }\n  }\n}\n\nfunction rehydrateAction (payload, error = null) {\n  return {\n    type: REHYDRATE,\n    payload,\n    error\n  }\n}\n","export const KEY_PREFIX = 'reduxPersist:'\nexport const REHYDRATE = 'persist/REHYDRATE'\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","const hasNativeSupport = typeof global !== 'undefined' && typeof global.setImmediate !== 'undefined'\nconst setImmediate = hasNativeSupport ? (fn, ms) => global.setImmediate(fn, ms) : (fn, ms) => setTimeout(fn, ms)\n\nexport default setImmediate\n","exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n","import autoRehydrate from './autoRehydrate'\nimport createPersistor from './createPersistor'\nimport createTransform from './createTransform'\nimport getStoredState from './getStoredState'\nimport persistStore from './persistStore'\nimport purgeStoredState from './purgeStoredState'\n\n// @TODO remove in v5\nconst deprecated = (cb, cb2, cb3) => {\n  console.error('redux-persist: this method of importing storages has been removed. instead use `import { asyncLocalStorage } from \"redux-persist/storages\"`')\n  if (typeof cb === 'function') cb()\n  if (typeof cb2 === 'function') cb2()\n  if (typeof cb3 === 'function') cb3()\n}\nconst deprecatedStorage = { getAllKeys: deprecated, getItem: deprecated, setItem: deprecated, removeItem: deprecated }\nconst storages = {\n  asyncLocalStorage: deprecatedStorage,\n  asyncSessionStorage: deprecatedStorage\n}\n\nexport { autoRehydrate, createPersistor, createTransform, getStoredState, persistStore, purgeStoredState, storages }\n"],"names":["getRawTag","value","isOwn","hasOwnProperty","call","symToStringTag","tag","undefined","unmasked","e","result","nativeObjectToString","objectToString","baseGetTag","undefinedTag","nullTag","Object","isObjectLike","isPlainObject","objectTag","proto","getPrototype","Ctor","constructor","funcToString","objectCtorString","isStatePlainEnough","a","asMutable","autoRehydrate","liftReducer","reducer","rehydrated","preRehydrateActions","state","action","type","REHYDRATE","config","log","push","logPreRehydrate","inboundState","payload","reducedState","stateReconciler","defaultStateReconciler","next","initialState","enhancer","store","replaceReducer","concernedActions","slice","length","newState","keys","forEach","key","babelHelpers.typeof","console","_hasStorage","storageType","window","storage","testKey","setItem","getItem","removeItem","hasLocalStorage","hasSessionStorage","getStorage","localStorage","noStorage","getAllKeys","sessionStorage","purgeStoredState","keyPrefix","KEY_PREFIX","Array","isArray","Error","Promise","resolve","reject","err","allKeys","filter","indexOf","map","all","warnIfRemoveError","createPersistor","passWhitelistBlacklist","whitelist","blacklist","adhocRehydrate","incoming","options","serial","subState","data","deserializer","transforms","reduceRight","interState","transformer","out","stateSetter","dispatch","rehydrateAction","createStorageKey","serializer","serialize","defaultSerializer","defaultDeserializer","debounce","stateInit","_stateInit","stateIterator","_stateIterator","defaultStateIterator","stateGetter","_stateGetter","defaultStateGetter","_stateSetter","defaultStateSetter","createAsyncLocalStorage","lastState","paused","storesToProcess","timeIterator","subscribe","getState","len","setInterval","shift","storageKey","endState","reduce","in","warnIfSetError","stringify","k","v","JSON","parse","collection","callback","createTransform","inbound","outbound","whitelistBlacklistCheck","getStoredState","onComplete","rehydrate","serialized","complete","restoredState","completionCount","persistKeys","keysToRestore","restoreCount","persistStore","resume","shouldRestore","skipRestore","purgeKeys","persistor","pause","purge","freeGlobal","global","freeSelf","self","root","Function","Symbol","objectProto","prototype","toString","toStringTag","func","transform","arg","getPrototypeOf","funcProto","hasNativeSupport","setImmediate","fn","ms","setTimeout","cb","i","s","string","obj","replacer","spaces","cycleReplacer","stack","join","thisPos","this","splice","Infinity","exports","module","deprecated","cb2","cb3","error","deprecatedStorage","storages"],"mappings":"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"}